public class doubly {
    public class Node{
        int data;
        Node next;
        Node prev;
        public Node(int data){
        this.data=data;
        this.next=next;
        this.prev=prev;
        }
    }
    public static Node head;
    public static Node tail;
    public static int size;

    public void addfirst(int data){                  //add head
        Node newnode = new Node(data); 
        size++;
        if(head==null){
            head=tail=newnode;
            return;
        }
        newnode.next=head;
        head.prev=newnode;
        head=newnode;
    } 

    public int removehead(){                            //remove head
        if(head==null){
            System.out.println("Empty");
            return Integer.MIN_VALUE;
        }
        if(size==1){
            int val=head.data;
            head=tail=null;
            size--;
            return val;
        }
        int val=head.data;
        head=head.next;
        head.prev=null;
        size--;
        return val;
    }
    public void reverse(){                   //reverse the doubly linkedlist
            Node curr=head;
            Node prev=null;
            Node next;
            while(curr!=null){
                next=curr.next;
                curr.next=prev;
                curr.prev=next;
                prev=curr;
                curr=next;
            }
            head=prev;
        }
    public void print(){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.data + "->");
            temp=temp.next;
        }
        System.out.println("null");
    }

    public static void main(String[] args) {
        doubly d = new doubly();
        d.addfirst(3);
        d.addfirst(2);
        d.addfirst(1);
        d.print();
        System.out.println(d.size);

    }

}
